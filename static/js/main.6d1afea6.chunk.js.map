{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","React","memo","hasClock","clockName","useState","Date","currentTime","setCurrentTime","useEffect","timerId","window","setInterval","newTime","console","info","toUTCString","slice","clearInterval","className","App","setHasClock","setClockName","prevClockName","useRef","handleClick","event","preventDefault","log","button","handleContextMenu","timerClockName","newName","value","now","toString","getRandomName","debug","current","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"2KAQaA,EAAyBC,IAAMC,MAAK,YAA8B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC5D,EAAsCC,mBAAS,IAAIC,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAnBAC,qBAAU,WACR,IAAIC,EAAU,EAad,OAXIP,EACFO,EAAUC,OAAOC,aAAY,WAC3B,IAAMC,EAAU,IAAIP,KAEpBQ,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAC/CT,EAAeK,KACd,KAEHF,OAAOO,cAAcR,GAGhB,WACLC,OAAOO,cAAcR,MAEtB,CAACP,IAGFA,EACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,IAEF,YACD,sBAAMe,UAAU,cAAhB,SACGZ,EAAYS,cAAcC,OAAO,IAAK,QAGzC,QC9BD,IAAMG,EAAgB,WAC3B,MAAgCf,oBAAS,GAAzC,mBAAOF,EAAP,KAAiBkB,EAAjB,KACA,EAAkChB,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBkB,EAAlB,KACMC,EAAgBC,iBAAOpB,GAwC7B,OAtCAK,qBAAU,WACR,IAAMgB,EAAc,SAACC,GACnBA,EAAMC,iBACNN,GAAY,GACZP,QAAQc,IAAI,eACZd,QAAQc,IAAIzB,GACS,IAAjBuB,EAAMG,SACRR,GAAY,GACZP,QAAQc,IAAI,kBAIVE,EAAoB,SAACJ,GACzBA,EAAMC,iBACNN,GAAY,GACZP,QAAQc,IAAI,iBAGRG,EAAiBpB,OAAOC,aAAY,WACxC,IAAMoB,EA9BZ,WACE,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GA2BIG,GAEZhC,IAAc4B,IAChBlB,QAAQuB,MAAR,eAAsBjC,EAAtB,gBAAuC4B,IACvCT,EAAce,QAAUlC,EACxBkB,EAAaU,MAEd,MAKH,OAHAO,SAASC,iBAAiB,QAASf,GACnCc,SAASC,iBAAiB,cAAeV,GAElC,WACLnB,OAAOO,cAAca,GACrBQ,SAASE,oBAAoB,QAAShB,GACtCc,SAASE,oBAAoB,cAAeX,MAE7C,CAAC1B,EAAWD,IAGb,sBAAKgB,UAAU,MAAf,UACE,6CACA,cAACnB,EAAD,CACEG,SAAUA,EACVC,UAAWA,QCxDnBsC,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,U","file":"static/js/main.6d1afea6.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport const Clock: React.FC<Props> = React.memo(({ hasClock, clockName }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    let timerId = 0;\n\n    if (hasClock) {\n      timerId = window.setInterval(() => {\n        const newTime = new Date();\n\n        console.info(newTime.toUTCString().slice(-12, -4));\n        setCurrentTime(newTime);\n      }, 1000);\n    } else {\n      window.clearInterval(timerId);\n    }\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, [hasClock]);\n\n  return (\n    hasClock ? (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    ) : null\n  );\n});\n","/* eslint-disable no-console */\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [hasClock, setHasClock] = useState(true);\n  const [clockName, setClockName] = useState('Clock-0');\n  const prevClockName = useRef(clockName);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(true);\n      console.log('left button');\n      console.log(hasClock);\n      if (event.button === 2) {\n        setHasClock(false);\n        console.log('right button');\n      }\n    };\n\n    const handleContextMenu = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(false);\n      console.log('right button');\n    };\n\n    const timerClockName = window.setInterval(() => {\n      const newName = getRandomName();\n\n      if (clockName !== newName) {\n        console.debug(`prev ${clockName} new ${newName}`);\n        prevClockName.current = clockName;\n        setClockName(newName);\n      }\n    }, 3300);\n\n    document.addEventListener('click', handleClick);\n    document.addEventListener('contextmenu', handleContextMenu);\n\n    return () => {\n      window.clearInterval(timerClockName);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, [clockName, hasClock]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      <Clock\n        hasClock={hasClock}\n        clockName={clockName}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}