{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","props","hasClock","window","setInterval","newTime","console","info","toUTCString","slice","setState","clearInterval","clockName","className","React","Component","getRandomName","value","now","toString","App","timerClockName","handleClick","event","preventDefault","button","handleContextMenu","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAgDaA,EAAb,4MACEC,MAAe,CACbC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACHC,KAAKC,MAAlBC,WAGNF,KAAKD,QAAUI,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIP,KAEhB,EAAKF,MAAMC,aACbS,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAGjD,EAAKC,SAAS,CAAEb,YAAaQ,MAC5B,QAnBT,kCAuBE,WACEF,OAAOQ,cAAcX,KAAKD,WAxB9B,oBA2BE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YACAe,EAAcZ,KAAKC,MAAnBW,UAER,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAEF,YACD,sBAAMC,UAAU,cAAhB,SACGhB,EAAYW,cAAcC,OAAO,IAAK,YAtCjD,GAA2BK,IAAMC,WC1CjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAiEX,IAAMG,EAAb,4MACExB,MAAe,CACbM,UAAU,EACVU,UAAW,WAHf,EAMES,eAAiB,EANnB,EAiCEC,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKd,SAAS,CAAER,UAAU,IACL,IAAjBqB,EAAME,QACR,EAAKf,SAAS,CAAER,UAAU,KArChC,EAyCEwB,kBAAoB,SAACH,GACnBA,EAAMC,iBAEN,EAAKd,SAAS,CAAER,UAAU,KA5C9B,uDAQE,WAA2B,IAAD,OACxByB,SAASC,iBAAiB,QAAS5B,KAAKsB,aACxCK,SAASC,iBAAiB,cAAe5B,KAAK0B,mBAE9C1B,KAAKqB,eAAiBlB,OAAOC,aAAY,WACvC,EAAKM,SAAS,CAAEE,UAAWI,QAC1B,QAdP,gCAiBE,SAAmBa,EACjBC,GACIA,EAAUlB,YAAcZ,KAAKJ,MAAMgB,WACrCN,QAAQyB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDZ,KAAKJ,MAAMgB,cApBzE,kCAwBE,WACMZ,KAAKqB,gBACPlB,OAAOQ,cAAcX,KAAKqB,gBAG5BM,SAASK,oBAAoB,QAAShC,KAAKsB,aAC3CK,SAASK,oBAAoB,cAAehC,KAAK0B,qBA9BrD,oBA+CE,WACE,MAAgC1B,KAAKJ,MAA7BM,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,UAElB,OACE,sBAAKC,UAAU,MAAf,UACE,6CAECX,GACC,cAAC,EAAD,CACEA,SAAUA,EACVU,UAAWA,WAzDvB,GAAyBE,IAAMC,WCvE/BkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.90630161.chunk.js","sourcesContent":["/* eslint-disable no-console */\n// import React, { useEffect, useState } from 'react';\nimport React from 'react';\n\ntype Props = {\n  hasClock: boolean;\n  clockName: string;\n};\n\n// export const Clock: React.FC<Props> = React.memo(({ hasClock, clockName }) => {\n//   const [currentTime, setCurrentTime] = useState(new Date());\n\n//   useEffect(() => {\n//     let timerId = 0;\n\n//     if (hasClock) {\n//       timerId = window.setInterval(() => {\n//         const newTime = new Date();\n\n//         console.info(newTime.toUTCString().slice(-12, -4));\n//         setCurrentTime(newTime);\n//       }, 1000);\n//     }\n\n//     return () => {\n//       window.clearInterval(timerId);\n//     };\n//   }, [hasClock]);\n\n//   return (\n//     hasClock ? (\n//       <div className=\"Clock\">\n//         <strong className=\"Clock__name\">\n//           {clockName}\n//         </strong>\n//         {' time is '}\n//         <span className=\"Clock__time\">\n//           {currentTime.toUTCString().slice(-12, -4)}\n//         </span>\n//       </div>\n//     ) : null\n//   );\n// });\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    const { hasClock } = this.props;\n\n    if (hasClock) {\n      this.timerId = window.setInterval(() => {\n        const newTime = new Date();\n\n        if (this.state.currentTime) {\n          console.info(newTime.toUTCString().slice(-12, -4));\n        }\n\n        this.setState({ currentTime: newTime });\n      }, 1000);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\n// import React, { useEffect, useState } from 'react';\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\n// export const App: React.FC = () => {\n//   const [hasClock, setHasClock] = useState(true);\n//   const [clockName, setClockName] = useState('Clock-0');\n\n//   useEffect(() => {\n//     const handleClick = (event: MouseEvent) => {\n//       event.preventDefault();\n//       setHasClock(true);\n//       console.log('left button');\n//       console.log(hasClock);\n//       if (event.button === 2) {\n//         setHasClock(false);\n//         console.log('right button');\n//       }\n//     };\n\n//     const handleContextMenu = (event: MouseEvent) => {\n//       event.preventDefault();\n//       setHasClock(false);\n//       console.log('right button');\n//     };\n\n//     const timerClockName = window.setInterval(() => {\n//       const newName = getRandomName();\n\n//       console.debug(`Renamed from ${clockName} to ${newName}`);\n//       setClockName(newName);\n//     }, 3300);\n\n//     document.addEventListener('click', handleClick);\n//     document.addEventListener('contextmenu', handleContextMenu);\n\n//     return () => {\n//       window.clearInterval(timerClockName);\n//       document.removeEventListener('click', handleClick);\n//       document.removeEventListener('contextmenu', handleContextMenu);\n//     };\n//   }, [clockName, hasClock]);\n\n//   return (\n//     <div className=\"App\">\n//       <h1>React clock</h1>\n\n//       {hasClock && (\n//         <Clock\n//           hasClock={hasClock}\n//           clockName={clockName}\n//         />\n//       )}\n//       {/* <Clock\n//         hasClock={hasClock}\n//         clockName={clockName}\n//       /> */}\n//     </div>\n//   );\n// };\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component< {}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerClockName = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    this.timerClockName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>,\n    prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerClockName) {\n      window.clearInterval(this.timerClockName);\n    }\n\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n  }\n\n  handleClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n    if (event.button === 2) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock\n            hasClock={hasClock}\n            clockName={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}