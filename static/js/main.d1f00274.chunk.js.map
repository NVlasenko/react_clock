{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","props","hasClock","window","setInterval","newTime","console","info","toUTCString","slice","setState","clearInterval","clockName","className","React","Component","App","useState","setHasClock","setClockName","useEffect","handleClick","event","preventDefault","log","button","handleContextMenu","timerClockName","newName","value","now","toString","getRandomName","debug","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6NAgDaA,EAAb,4MACEC,MAAe,CACbC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACHC,KAAKC,MAAlBC,SAGNF,KAAKD,QAAUI,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIP,KAEpBQ,QAAQC,KAAKF,EAAQG,cAAcC,OAAO,IAAK,IAC/C,EAAKC,SAAS,CAAEb,YAAaQ,MAC5B,KACML,KAAKD,SACdI,OAAOQ,cAAcX,KAAKD,WAlBhC,kCAsBE,WACEI,OAAOQ,cAAcX,KAAKD,WAvB9B,oBA0BE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YACAe,EAAcZ,KAAKC,MAAnBW,UAER,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAEF,YACD,sBAAMC,UAAU,cAAhB,SACGhB,EAAYW,cAAcC,OAAO,IAAK,YArCjD,GAA2BK,IAAMC,WCrC1B,IAAMC,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOf,EAAP,KAAiBgB,EAAjB,KACA,EAAkCD,mBAAS,WAA3C,mBAAOL,EAAP,KAAkBO,EAAlB,KAqCA,OAnCAC,qBAAU,WACR,IAAMC,EAAc,SAACC,GACnBA,EAAMC,iBACNL,GAAY,GACZZ,QAAQkB,IAAI,eACZlB,QAAQkB,IAAItB,GACS,IAAjBoB,EAAMG,SACRP,GAAY,GACZZ,QAAQkB,IAAI,kBAIVE,EAAoB,SAACJ,GACzBA,EAAMC,iBACNL,GAAY,GACZZ,QAAQkB,IAAI,iBAGRG,EAAiBxB,OAAOC,aAAY,WACxC,IAAMwB,EA7BZ,WACE,IAAMC,EAAQ/B,KAAKgC,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GA0BIG,GAEhB1B,QAAQ2B,MAAR,uBAA8BrB,EAA9B,eAA8CgB,IAC9CT,EAAaS,KACZ,MAKH,OAHAM,SAASC,iBAAiB,QAASd,GACnCa,SAASC,iBAAiB,cAAeT,GAElC,WACLvB,OAAOQ,cAAcgB,GACrBO,SAASE,oBAAoB,QAASf,GACtCa,SAASE,oBAAoB,cAAeV,MAE7C,CAACd,EAAWV,IAGb,sBAAKW,UAAU,MAAf,UACE,6CAECX,GACC,cAAC,EAAD,CACEA,SAAUA,EACVU,UAAWA,QCtDrByB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d1f00274.chunk.js","sourcesContent":["/* eslint-disable no-console */\n// import React, { useEffect, useState } from 'react';\nimport React from 'react';\n\ntype Props = {\n  hasClock: boolean;\n  clockName: string;\n};\n\n// export const Clock: React.FC<Props> = React.memo(({ hasClock, clockName }) => {\n//   const [currentTime, setCurrentTime] = useState(new Date());\n\n//   useEffect(() => {\n//     let timerId = 0;\n\n//     if (hasClock) {\n//       timerId = window.setInterval(() => {\n//         const newTime = new Date();\n\n//         console.info(newTime.toUTCString().slice(-12, -4));\n//         setCurrentTime(newTime);\n//       }, 1000);\n//     }\n\n//     return () => {\n//       window.clearInterval(timerId);\n//     };\n//   }, [hasClock]);\n\n//   return (\n//     hasClock ? (\n//       <div className=\"Clock\">\n//         <strong className=\"Clock__name\">\n//           {clockName}\n//         </strong>\n//         {' time is '}\n//         <span className=\"Clock__time\">\n//           {currentTime.toUTCString().slice(-12, -4)}\n//         </span>\n//       </div>\n//     ) : null\n//   );\n// });\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    const { hasClock } = this.props;\n\n    if (hasClock) {\n      this.timerId = window.setInterval(() => {\n        const newTime = new Date();\n\n        console.info(newTime.toUTCString().slice(-12, -4));\n        this.setState({ currentTime: newTime });\n      }, 1000);\n    } else if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [hasClock, setHasClock] = useState(true);\n  const [clockName, setClockName] = useState('Clock-0');\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(true);\n      console.log('left button');\n      console.log(hasClock);\n      if (event.button === 2) {\n        setHasClock(false);\n        console.log('right button');\n      }\n    };\n\n    const handleContextMenu = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(false);\n      console.log('right button');\n    };\n\n    const timerClockName = window.setInterval(() => {\n      const newName = getRandomName();\n\n      console.debug(`Renamed from ${clockName} to ${newName}`);\n      setClockName(newName);\n    }, 3300);\n\n    document.addEventListener('click', handleClick);\n    document.addEventListener('contextmenu', handleContextMenu);\n\n    return () => {\n      window.clearInterval(timerClockName);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, [clockName, hasClock]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {hasClock && (\n        <Clock\n          hasClock={hasClock}\n          clockName={clockName}\n        />\n      )}\n      {/* <Clock\n        hasClock={hasClock}\n        clockName={clockName}\n      /> */}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}