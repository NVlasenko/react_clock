{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","React","memo","randomName","useState","hasClock","setHasClock","Date","currentTime","setCurrentTime","clockName","useRef","prevClockName","useEffect","handleClick","event","preventDefault","console","log","button","handleContextMenu","timerId","window","setInterval","info","toUTCString","slice","timerClockName","newName","current","debug","document","addEventListener","clearInterval","removeEventListener","className","getRandomName","value","now","toString","App","ReactDOM","render","getElementById"],"mappings":"2KAOaA,EAAyBC,IAAMC,MAAK,YAAqB,IAAlBC,EAAiB,EAAjBA,WAClD,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAAIG,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAYC,iBAAO,WACnBC,EAAgBD,iBAAO,IA8C7B,OA5CAE,qBAAU,WACR,IAAMC,EAAc,SAACC,GACnBA,EAAMC,iBACNV,GAAY,GACZW,QAAQC,IAAI,eAES,IAAjBH,EAAMI,SACRb,GAAY,GACZW,QAAQC,IAAI,kBAIVE,EAAoB,SAACL,GACzBA,EAAMC,iBACNV,GAAY,GACZW,QAAQC,IAAI,iBAGRG,EAAUC,OAAOC,aAAY,WACjCd,EAAe,IAAIF,MACnBU,QAAQO,KAAKhB,EAAYiB,cAAcC,OAAO,IAAK,MAClD,KAEGC,EAAiBL,OAAOC,aAAY,WACxC,IAAMK,EAAUzB,IAEZO,EAAUmB,UAAYD,IACxBX,QAAQa,MAAR,eAAsBpB,EAAUmB,QAAhC,gBAA+CD,IAC/ChB,EAAciB,QAAUnB,EAAUmB,QAClCnB,EAAUmB,QAAUD,KAErB,MAKH,OAHAG,SAASC,iBAAiB,QAASlB,GACnCiB,SAASC,iBAAiB,cAAeZ,GAElC,WACLE,OAAOW,cAAcZ,GACrBC,OAAOW,cAAcN,GACrBI,SAASG,oBAAoB,QAASpB,GACtCiB,SAASG,oBAAoB,cAAed,MAE7C,CAACjB,IAGFE,EACE,sBAAK8B,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGzB,EAAUmB,UAEZ,YACD,sBAAMM,UAAU,cAAhB,SACG3B,EAAYiB,cAAcC,OAAO,IAAK,QAGzC,QChER,SAASU,IACP,IAAMC,EAAQ9B,KAAK+B,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAGX,IAAMG,EAAgB,WAC3B,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,cAACnC,EAAD,CACEG,WAAYiC,QCZpBK,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,U","file":"static/js/main.ef48ba49.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useRef, useState } from 'react';\n\ntype Props = {\n  randomName: () => string;\n};\n\nexport const Clock: React.FC<Props> = React.memo(({ randomName }) => {\n  const [hasClock, setHasClock] = useState(true);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const clockName = useRef('Clock-0');\n  const prevClockName = useRef('');\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(true);\n      console.log('left button');\n\n      if (event.button === 2) {\n        setHasClock(false);\n        console.log('right button');\n      }\n    };\n\n    const handleContextMenu = (event: MouseEvent) => {\n      event.preventDefault();\n      setHasClock(false);\n      console.log('right button');\n    };\n\n    const timerId = window.setInterval(() => {\n      setCurrentTime(new Date());\n      console.info(currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    const timerClockName = window.setInterval(() => {\n      const newName = randomName();\n\n      if (clockName.current !== newName) {\n        console.debug(`prev ${clockName.current} new ${newName}`);\n        prevClockName.current = clockName.current;\n        clockName.current = newName;\n      }\n    }, 3300);\n\n    document.addEventListener('click', handleClick);\n    document.addEventListener('contextmenu', handleContextMenu);\n\n    return () => {\n      window.clearInterval(timerId);\n      window.clearInterval(timerClockName);\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, [randomName]);\n\n  return (\n    hasClock ? (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName.current}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {currentTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    ) : null\n  );\n});\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      <Clock\n        randomName={getRandomName}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}